// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Snapshot 1`] = `
{
  "Parameters": {
    "BootstrapVersion": {
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
  },
  "Resources": {
    "EcsLoadBalancerAccessLog0242E61B": {
      "DeletionPolicy": "Retain",
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-S1",
              "is_reason_encoded": true,
              "reason": "TkxC44Ki44Kv44K744K544Ot44Kw5L+d5a2Y55So44OQ44Kx44OD44OI44Gu44Gf44KB44CB44GT44KM6Ieq5L2T44Gu44Ki44Kv44K744K544Ot44Kw44Gv5LiN6KaB",
            },
          ],
        },
      },
      "Properties": {
        "BucketEncryption": {
          "ServerSideEncryptionConfiguration": [
            {
              "ServerSideEncryptionByDefault": {
                "SSEAlgorithm": "AES256",
              },
            },
          ],
        },
        "PublicAccessBlockConfiguration": {
          "BlockPublicAcls": true,
          "BlockPublicPolicy": true,
          "IgnorePublicAcls": true,
          "RestrictPublicBuckets": true,
        },
      },
      "Type": "AWS::S3::Bucket",
      "UpdateReplacePolicy": "Retain",
    },
    "EcsLoadBalancerAccessLogPolicy2E109E7E": {
      "Properties": {
        "Bucket": {
          "Ref": "EcsLoadBalancerAccessLog0242E61B",
        },
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "s3:*",
              "Condition": {
                "Bool": {
                  "aws:SecureTransport": "false",
                },
              },
              "Effect": "Deny",
              "Principal": {
                "AWS": "*",
              },
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "EcsLoadBalancerAccessLog0242E61B",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "EcsLoadBalancerAccessLog0242E61B",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": [
                "s3:PutObject",
                "s3:PutObjectLegalHold",
                "s3:PutObjectRetention",
                "s3:PutObjectTagging",
                "s3:PutObjectVersionTagging",
                "s3:Abort*",
              ],
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::582318560864:root",
                    ],
                  ],
                },
              },
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    {
                      "Fn::GetAtt": [
                        "EcsLoadBalancerAccessLog0242E61B",
                        "Arn",
                      ],
                    },
                    "/AWSLogs/",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    "/*",
                  ],
                ],
              },
            },
            {
              "Action": "s3:PutObject",
              "Condition": {
                "StringEquals": {
                  "s3:x-amz-acl": "bucket-owner-full-control",
                },
              },
              "Effect": "Allow",
              "Principal": {
                "Service": "delivery.logs.amazonaws.com",
              },
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    {
                      "Fn::GetAtt": [
                        "EcsLoadBalancerAccessLog0242E61B",
                        "Arn",
                      ],
                    },
                    "/AWSLogs/",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    "/*",
                  ],
                ],
              },
            },
            {
              "Action": "s3:GetBucketAcl",
              "Effect": "Allow",
              "Principal": {
                "Service": "delivery.logs.amazonaws.com",
              },
              "Resource": {
                "Fn::GetAtt": [
                  "EcsLoadBalancerAccessLog0242E61B",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::S3::BucketPolicy",
    },
    "EcsLoadBalancerED63ACE7": {
      "DependsOn": [
        "EcsLoadBalancerAccessLogPolicy2E109E7E",
        "EcsLoadBalancerAccessLog0242E61B",
      ],
      "Properties": {
        "LoadBalancerAttributes": [
          {
            "Key": "deletion_protection.enabled",
            "Value": "false",
          },
          {
            "Key": "access_logs.s3.enabled",
            "Value": "true",
          },
          {
            "Key": "access_logs.s3.bucket",
            "Value": {
              "Ref": "EcsLoadBalancerAccessLog0242E61B",
            },
          },
          {
            "Key": "access_logs.s3.prefix",
            "Value": "",
          },
        ],
        "Scheme": "internal",
        "Subnets": [
          {
            "Ref": "VpcapplicationSubnet1Subnet8B68205B",
          },
          {
            "Ref": "VpcapplicationSubnet2Subnet29670962",
          },
        ],
        "Type": "network",
      },
      "Type": "AWS::ElasticLoadBalancingV2::LoadBalancer",
    },
    "EcsServiceSecurityGroupCD98B82C": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-EC23",
              "is_reason_encoded": true,
              "reason": "5YaF5ZCR44GRTkxC44Gu44Gf44KB44CB5LiA5pem5YWo6ZaL5pS+54q25oWL44Go44GZ44KL44CC5Y+v6IO944Gn44GC44KM44GwQVBJR2F0ZXdheeOBi+OCieOBruOCouOCr+OCu+OCueOBq+e1nuOCi+OBk+OBqA==",
            },
          ],
        },
      },
      "Properties": {
        "GroupDescription": "test/EcsServiceSecurityGroup",
        "SecurityGroupEgress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "SecurityGroupIngress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "For Application Port",
            "FromPort": 3000,
            "IpProtocol": "tcp",
            "ToPort": 3000,
          },
        ],
        "VpcId": {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "FlowLog22E63E81": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "RetentionInDays": 731,
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
    },
    "FlowLogRoleCB27E7DF": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "vpc-flow-logs.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "FlowLogRoleDefaultPolicy9078999B": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "logs:CreateLogStream",
                "logs:PutLogEvents",
                "logs:DescribeLogStreams",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "FlowLog22E63E81",
                  "Arn",
                ],
              },
            },
            {
              "Action": "iam:PassRole",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "FlowLogRoleCB27E7DF",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "FlowLogRoleDefaultPolicy9078999B",
        "Roles": [
          {
            "Ref": "FlowLogRoleCB27E7DF",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "Vpc8378EB38": {
      "Properties": {
        "CidrBlock": "10.0.0.0/16",
        "EnableDnsHostnames": true,
        "EnableDnsSupport": true,
        "InstanceTenancy": "default",
        "Tags": [
          {
            "Key": "Name",
            "Value": "test/Vpc",
          },
        ],
      },
      "Type": "AWS::EC2::VPC",
    },
    "VpcDynamoDBEndpoint43D8F30A": {
      "Properties": {
        "RouteTableIds": [
          {
            "Ref": "VpcapplicationSubnet1RouteTableF03E8296",
          },
          {
            "Ref": "VpcapplicationSubnet2RouteTable17378AED",
          },
          {
            "Ref": "VpcingressSubnet1RouteTable804C7A26",
          },
          {
            "Ref": "VpcingressSubnet2RouteTable8B0E23A7",
          },
          {
            "Ref": "VpcdatabaseSubnet1RouteTableF3B572E4",
          },
          {
            "Ref": "VpcdatabaseSubnet2RouteTable1E50BD8E",
          },
        ],
        "ServiceName": {
          "Fn::Join": [
            "",
            [
              "com.amazonaws.",
              {
                "Ref": "AWS::Region",
              },
              ".dynamodb",
            ],
          ],
        },
        "VpcEndpointType": "Gateway",
        "VpcId": {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::VPCEndpoint",
    },
    "VpcEcrDkrEndpoint764F3A9A": {
      "Properties": {
        "PrivateDnsEnabled": true,
        "SecurityGroupIds": [
          {
            "Fn::GetAtt": [
              "VpcEcrDkrEndpointSecurityGroup01F64E22",
              "GroupId",
            ],
          },
        ],
        "ServiceName": "com.amazonaws.ap-northeast-1.ecr.dkr",
        "SubnetIds": [
          {
            "Ref": "VpcapplicationSubnet1Subnet8B68205B",
          },
          {
            "Ref": "VpcapplicationSubnet2Subnet29670962",
          },
        ],
        "VpcEndpointType": "Interface",
        "VpcId": {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::VPCEndpoint",
    },
    "VpcEcrDkrEndpointSecurityGroup01F64E22": {
      "Properties": {
        "GroupDescription": "test/Vpc/EcrDkrEndpoint/SecurityGroup",
        "SecurityGroupEgress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "SecurityGroupIngress": [
          {
            "CidrIp": {
              "Fn::GetAtt": [
                "Vpc8378EB38",
                "CidrBlock",
              ],
            },
            "Description": {
              "Fn::Join": [
                "",
                [
                  "from ",
                  {
                    "Fn::GetAtt": [
                      "Vpc8378EB38",
                      "CidrBlock",
                    ],
                  },
                  ":443",
                ],
              ],
            },
            "FromPort": 443,
            "IpProtocol": "tcp",
            "ToPort": 443,
          },
        ],
        "Tags": [
          {
            "Key": "Name",
            "Value": "test/Vpc",
          },
        ],
        "VpcId": {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "VpcEcrEndpoint0BE46338": {
      "Properties": {
        "PrivateDnsEnabled": true,
        "SecurityGroupIds": [
          {
            "Fn::GetAtt": [
              "VpcEcrEndpointSecurityGroup13145954",
              "GroupId",
            ],
          },
        ],
        "ServiceName": "com.amazonaws.ap-northeast-1.ecr.api",
        "SubnetIds": [
          {
            "Ref": "VpcapplicationSubnet1Subnet8B68205B",
          },
          {
            "Ref": "VpcapplicationSubnet2Subnet29670962",
          },
        ],
        "VpcEndpointType": "Interface",
        "VpcId": {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::VPCEndpoint",
    },
    "VpcEcrEndpointSecurityGroup13145954": {
      "Properties": {
        "GroupDescription": "test/Vpc/EcrEndpoint/SecurityGroup",
        "SecurityGroupEgress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "SecurityGroupIngress": [
          {
            "CidrIp": {
              "Fn::GetAtt": [
                "Vpc8378EB38",
                "CidrBlock",
              ],
            },
            "Description": {
              "Fn::Join": [
                "",
                [
                  "from ",
                  {
                    "Fn::GetAtt": [
                      "Vpc8378EB38",
                      "CidrBlock",
                    ],
                  },
                  ":443",
                ],
              ],
            },
            "FromPort": 443,
            "IpProtocol": "tcp",
            "ToPort": 443,
          },
        ],
        "Tags": [
          {
            "Key": "Name",
            "Value": "test/Vpc",
          },
        ],
        "VpcId": {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "VpcFlowLog8FF33A73": {
      "Properties": {
        "DeliverLogsPermissionArn": {
          "Fn::GetAtt": [
            "FlowLogRoleCB27E7DF",
            "Arn",
          ],
        },
        "LogDestinationType": "cloud-watch-logs",
        "LogGroupName": {
          "Ref": "FlowLog22E63E81",
        },
        "ResourceId": {
          "Ref": "Vpc8378EB38",
        },
        "ResourceType": "VPC",
        "Tags": [
          {
            "Key": "Name",
            "Value": "test/Vpc",
          },
        ],
        "TrafficType": "ALL",
      },
      "Type": "AWS::EC2::FlowLog",
    },
    "VpcIGWD7BA715C": {
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "test/Vpc",
          },
        ],
      },
      "Type": "AWS::EC2::InternetGateway",
    },
    "VpcLogEndpoint02E2D2F2": {
      "Properties": {
        "PrivateDnsEnabled": true,
        "SecurityGroupIds": [
          {
            "Fn::GetAtt": [
              "VpcLogEndpointSecurityGroupBDF50B2C",
              "GroupId",
            ],
          },
        ],
        "ServiceName": "com.amazonaws.ap-northeast-1.logs",
        "SubnetIds": [
          {
            "Ref": "VpcapplicationSubnet1Subnet8B68205B",
          },
          {
            "Ref": "VpcapplicationSubnet2Subnet29670962",
          },
        ],
        "VpcEndpointType": "Interface",
        "VpcId": {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::VPCEndpoint",
    },
    "VpcLogEndpointSecurityGroupBDF50B2C": {
      "Properties": {
        "GroupDescription": "test/Vpc/LogEndpoint/SecurityGroup",
        "SecurityGroupEgress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "SecurityGroupIngress": [
          {
            "CidrIp": {
              "Fn::GetAtt": [
                "Vpc8378EB38",
                "CidrBlock",
              ],
            },
            "Description": {
              "Fn::Join": [
                "",
                [
                  "from ",
                  {
                    "Fn::GetAtt": [
                      "Vpc8378EB38",
                      "CidrBlock",
                    ],
                  },
                  ":443",
                ],
              ],
            },
            "FromPort": 443,
            "IpProtocol": "tcp",
            "ToPort": 443,
          },
        ],
        "Tags": [
          {
            "Key": "Name",
            "Value": "test/Vpc",
          },
        ],
        "VpcId": {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "VpcS3Endpoint4A3DE4B5": {
      "Properties": {
        "RouteTableIds": [
          {
            "Ref": "VpcapplicationSubnet1RouteTableF03E8296",
          },
          {
            "Ref": "VpcapplicationSubnet2RouteTable17378AED",
          },
          {
            "Ref": "VpcingressSubnet1RouteTable804C7A26",
          },
          {
            "Ref": "VpcingressSubnet2RouteTable8B0E23A7",
          },
          {
            "Ref": "VpcdatabaseSubnet1RouteTableF3B572E4",
          },
          {
            "Ref": "VpcdatabaseSubnet2RouteTable1E50BD8E",
          },
        ],
        "ServiceName": {
          "Fn::Join": [
            "",
            [
              "com.amazonaws.",
              {
                "Ref": "AWS::Region",
              },
              ".s3",
            ],
          ],
        },
        "VpcEndpointType": "Gateway",
        "VpcId": {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::VPCEndpoint",
    },
    "VpcSSMInterfaceA9FEB3C2": {
      "Properties": {
        "PrivateDnsEnabled": true,
        "SecurityGroupIds": [
          {
            "Fn::GetAtt": [
              "VpcSSMInterfaceSecurityGroup428E6075",
              "GroupId",
            ],
          },
        ],
        "ServiceName": "com.amazonaws.ap-northeast-1.ssm",
        "SubnetIds": [
          {
            "Ref": "VpcapplicationSubnet1Subnet8B68205B",
          },
          {
            "Ref": "VpcapplicationSubnet2Subnet29670962",
          },
        ],
        "VpcEndpointType": "Interface",
        "VpcId": {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::VPCEndpoint",
    },
    "VpcSSMInterfaceSecurityGroup428E6075": {
      "Properties": {
        "GroupDescription": "test/Vpc/SSMInterface/SecurityGroup",
        "SecurityGroupEgress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "SecurityGroupIngress": [
          {
            "CidrIp": {
              "Fn::GetAtt": [
                "Vpc8378EB38",
                "CidrBlock",
              ],
            },
            "Description": {
              "Fn::Join": [
                "",
                [
                  "from ",
                  {
                    "Fn::GetAtt": [
                      "Vpc8378EB38",
                      "CidrBlock",
                    ],
                  },
                  ":443",
                ],
              ],
            },
            "FromPort": 443,
            "IpProtocol": "tcp",
            "ToPort": 443,
          },
        ],
        "Tags": [
          {
            "Key": "Name",
            "Value": "test/Vpc",
          },
        ],
        "VpcId": {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "VpcSecretsEndpointFBE119FA": {
      "Properties": {
        "PrivateDnsEnabled": true,
        "SecurityGroupIds": [
          {
            "Fn::GetAtt": [
              "VpcSecretsEndpointSecurityGroup81CD588F",
              "GroupId",
            ],
          },
        ],
        "ServiceName": "com.amazonaws.ap-northeast-1.secretsmanager",
        "SubnetIds": [
          {
            "Ref": "VpcapplicationSubnet1Subnet8B68205B",
          },
          {
            "Ref": "VpcapplicationSubnet2Subnet29670962",
          },
        ],
        "VpcEndpointType": "Interface",
        "VpcId": {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::VPCEndpoint",
    },
    "VpcSecretsEndpointSecurityGroup81CD588F": {
      "Properties": {
        "GroupDescription": "test/Vpc/SecretsEndpoint/SecurityGroup",
        "SecurityGroupEgress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "SecurityGroupIngress": [
          {
            "CidrIp": {
              "Fn::GetAtt": [
                "Vpc8378EB38",
                "CidrBlock",
              ],
            },
            "Description": {
              "Fn::Join": [
                "",
                [
                  "from ",
                  {
                    "Fn::GetAtt": [
                      "Vpc8378EB38",
                      "CidrBlock",
                    ],
                  },
                  ":443",
                ],
              ],
            },
            "FromPort": 443,
            "IpProtocol": "tcp",
            "ToPort": 443,
          },
        ],
        "Tags": [
          {
            "Key": "Name",
            "Value": "test/Vpc",
          },
        ],
        "VpcId": {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "VpcVPCGWBF912B6E": {
      "Properties": {
        "InternetGatewayId": {
          "Ref": "VpcIGWD7BA715C",
        },
        "VpcId": {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::VPCGatewayAttachment",
    },
    "VpcapplicationSubnet1DefaultRouteD1F37131": {
      "Properties": {
        "DestinationCidrBlock": "0.0.0.0/0",
        "NatGatewayId": {
          "Ref": "VpcingressSubnet1NATGateway5ADD866D",
        },
        "RouteTableId": {
          "Ref": "VpcapplicationSubnet1RouteTableF03E8296",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VpcapplicationSubnet1RouteTableAssociation75D5245D": {
      "Properties": {
        "RouteTableId": {
          "Ref": "VpcapplicationSubnet1RouteTableF03E8296",
        },
        "SubnetId": {
          "Ref": "VpcapplicationSubnet1Subnet8B68205B",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VpcapplicationSubnet1RouteTableF03E8296": {
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "test/Vpc/applicationSubnet1",
          },
        ],
        "VpcId": {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VpcapplicationSubnet1Subnet8B68205B": {
      "Properties": {
        "AvailabilityZone": {
          "Fn::Select": [
            0,
            {
              "Fn::GetAZs": "",
            },
          ],
        },
        "CidrBlock": "10.0.2.0/24",
        "MapPublicIpOnLaunch": false,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "application",
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Private",
          },
          {
            "Key": "Name",
            "Value": "test/Vpc/applicationSubnet1",
          },
        ],
        "VpcId": {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "VpcapplicationSubnet2DefaultRoute928D347B": {
      "Properties": {
        "DestinationCidrBlock": "0.0.0.0/0",
        "NatGatewayId": {
          "Ref": "VpcingressSubnet2NATGatewayDAA0F549",
        },
        "RouteTableId": {
          "Ref": "VpcapplicationSubnet2RouteTable17378AED",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VpcapplicationSubnet2RouteTable17378AED": {
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "test/Vpc/applicationSubnet2",
          },
        ],
        "VpcId": {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VpcapplicationSubnet2RouteTableAssociationF25110CC": {
      "Properties": {
        "RouteTableId": {
          "Ref": "VpcapplicationSubnet2RouteTable17378AED",
        },
        "SubnetId": {
          "Ref": "VpcapplicationSubnet2Subnet29670962",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VpcapplicationSubnet2Subnet29670962": {
      "Properties": {
        "AvailabilityZone": {
          "Fn::Select": [
            1,
            {
              "Fn::GetAZs": "",
            },
          ],
        },
        "CidrBlock": "10.0.3.0/24",
        "MapPublicIpOnLaunch": false,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "application",
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Private",
          },
          {
            "Key": "Name",
            "Value": "test/Vpc/applicationSubnet2",
          },
        ],
        "VpcId": {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "VpcdatabaseSubnet1RouteTableAssociationEE6CA36B": {
      "Properties": {
        "RouteTableId": {
          "Ref": "VpcdatabaseSubnet1RouteTableF3B572E4",
        },
        "SubnetId": {
          "Ref": "VpcdatabaseSubnet1SubnetD53A427B",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VpcdatabaseSubnet1RouteTableF3B572E4": {
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "test/Vpc/databaseSubnet1",
          },
        ],
        "VpcId": {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VpcdatabaseSubnet1SubnetD53A427B": {
      "Properties": {
        "AvailabilityZone": {
          "Fn::Select": [
            0,
            {
              "Fn::GetAZs": "",
            },
          ],
        },
        "CidrBlock": "10.0.4.0/24",
        "MapPublicIpOnLaunch": false,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "database",
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Isolated",
          },
          {
            "Key": "Name",
            "Value": "test/Vpc/databaseSubnet1",
          },
        ],
        "VpcId": {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "VpcdatabaseSubnet2RouteTable1E50BD8E": {
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "test/Vpc/databaseSubnet2",
          },
        ],
        "VpcId": {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VpcdatabaseSubnet2RouteTableAssociationCADBAF9A": {
      "Properties": {
        "RouteTableId": {
          "Ref": "VpcdatabaseSubnet2RouteTable1E50BD8E",
        },
        "SubnetId": {
          "Ref": "VpcdatabaseSubnet2Subnet75663D63",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VpcdatabaseSubnet2Subnet75663D63": {
      "Properties": {
        "AvailabilityZone": {
          "Fn::Select": [
            1,
            {
              "Fn::GetAZs": "",
            },
          ],
        },
        "CidrBlock": "10.0.5.0/24",
        "MapPublicIpOnLaunch": false,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "database",
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Isolated",
          },
          {
            "Key": "Name",
            "Value": "test/Vpc/databaseSubnet2",
          },
        ],
        "VpcId": {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "VpcingressSubnet1DefaultRoute4188A546": {
      "DependsOn": [
        "VpcVPCGWBF912B6E",
      ],
      "Properties": {
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": {
          "Ref": "VpcIGWD7BA715C",
        },
        "RouteTableId": {
          "Ref": "VpcingressSubnet1RouteTable804C7A26",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VpcingressSubnet1EIPD1FA297B": {
      "Properties": {
        "Domain": "vpc",
        "Tags": [
          {
            "Key": "Name",
            "Value": "test/Vpc/ingressSubnet1",
          },
        ],
      },
      "Type": "AWS::EC2::EIP",
    },
    "VpcingressSubnet1NATGateway5ADD866D": {
      "DependsOn": [
        "VpcingressSubnet1DefaultRoute4188A546",
        "VpcingressSubnet1RouteTableAssociation5DF54E70",
      ],
      "Properties": {
        "AllocationId": {
          "Fn::GetAtt": [
            "VpcingressSubnet1EIPD1FA297B",
            "AllocationId",
          ],
        },
        "SubnetId": {
          "Ref": "VpcingressSubnet1Subnet059F22C6",
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "test/Vpc/ingressSubnet1",
          },
        ],
      },
      "Type": "AWS::EC2::NatGateway",
    },
    "VpcingressSubnet1RouteTable804C7A26": {
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "test/Vpc/ingressSubnet1",
          },
        ],
        "VpcId": {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VpcingressSubnet1RouteTableAssociation5DF54E70": {
      "Properties": {
        "RouteTableId": {
          "Ref": "VpcingressSubnet1RouteTable804C7A26",
        },
        "SubnetId": {
          "Ref": "VpcingressSubnet1Subnet059F22C6",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VpcingressSubnet1Subnet059F22C6": {
      "Properties": {
        "AvailabilityZone": {
          "Fn::Select": [
            0,
            {
              "Fn::GetAZs": "",
            },
          ],
        },
        "CidrBlock": "10.0.0.0/24",
        "MapPublicIpOnLaunch": true,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "ingress",
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public",
          },
          {
            "Key": "Name",
            "Value": "test/Vpc/ingressSubnet1",
          },
        ],
        "VpcId": {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "VpcingressSubnet2DefaultRoute18203BC3": {
      "DependsOn": [
        "VpcVPCGWBF912B6E",
      ],
      "Properties": {
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": {
          "Ref": "VpcIGWD7BA715C",
        },
        "RouteTableId": {
          "Ref": "VpcingressSubnet2RouteTable8B0E23A7",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VpcingressSubnet2EIP87470ECB": {
      "Properties": {
        "Domain": "vpc",
        "Tags": [
          {
            "Key": "Name",
            "Value": "test/Vpc/ingressSubnet2",
          },
        ],
      },
      "Type": "AWS::EC2::EIP",
    },
    "VpcingressSubnet2NATGatewayDAA0F549": {
      "DependsOn": [
        "VpcingressSubnet2DefaultRoute18203BC3",
        "VpcingressSubnet2RouteTableAssociation39E1BA3A",
      ],
      "Properties": {
        "AllocationId": {
          "Fn::GetAtt": [
            "VpcingressSubnet2EIP87470ECB",
            "AllocationId",
          ],
        },
        "SubnetId": {
          "Ref": "VpcingressSubnet2SubnetF175D754",
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "test/Vpc/ingressSubnet2",
          },
        ],
      },
      "Type": "AWS::EC2::NatGateway",
    },
    "VpcingressSubnet2RouteTable8B0E23A7": {
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "test/Vpc/ingressSubnet2",
          },
        ],
        "VpcId": {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VpcingressSubnet2RouteTableAssociation39E1BA3A": {
      "Properties": {
        "RouteTableId": {
          "Ref": "VpcingressSubnet2RouteTable8B0E23A7",
        },
        "SubnetId": {
          "Ref": "VpcingressSubnet2SubnetF175D754",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VpcingressSubnet2SubnetF175D754": {
      "Properties": {
        "AvailabilityZone": {
          "Fn::Select": [
            1,
            {
              "Fn::GetAZs": "",
            },
          ],
        },
        "CidrBlock": "10.0.1.0/24",
        "MapPublicIpOnLaunch": true,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "ingress",
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public",
          },
          {
            "Key": "Name",
            "Value": "test/Vpc/ingressSubnet2",
          },
        ],
        "VpcId": {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
  },
  "Rules": {
    "CheckBootstrapVersion": {
      "Assertions": [
        {
          "Assert": {
            "Fn::Not": [
              {
                "Fn::Contains": [
                  [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                  ],
                  {
                    "Ref": "BootstrapVersion",
                  },
                ],
              },
            ],
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.",
        },
      ],
    },
  },
}
`;
