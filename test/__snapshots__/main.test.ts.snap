// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Snapshot 1`] = `
{
  "Parameters": {
    "BootstrapVersion": {
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
  },
  "Resources": {
    "CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F": {
      "DependsOn": [
        "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-ap-northeast-1",
          },
          "S3Key": "e57c1acaa363d7d2b81736776007a7091bc73dff4aeb8135627c4511a51e7dca.zip",
        },
        "Description": {
          "Fn::Join": [
            "",
            [
              "Lambda function for auto-deleting objects in ",
              {
                "Ref": "EcsLoadBalancerAccessLogLogBucket0705AFF0",
              },
              " S3 bucket.",
            ],
          ],
        },
        "Handler": "__entrypoint__.handler",
        "MemorySize": 128,
        "Role": {
          "Fn::GetAtt": [
            "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
            "Arn",
          ],
        },
        "Runtime": "nodejs14.x",
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Sub": "arn:\${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "EcsLoadBalancerAccessLogLogBucket0705AFF0": {
      "DeletionPolicy": "Delete",
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-S1",
              "reason": "Bucket for storing access logs, so no needed for itself.",
            },
          ],
        },
      },
      "Properties": {
        "BucketEncryption": {
          "ServerSideEncryptionConfiguration": [
            {
              "ServerSideEncryptionByDefault": {
                "SSEAlgorithm": "AES256",
              },
            },
          ],
        },
        "PublicAccessBlockConfiguration": {
          "BlockPublicAcls": true,
          "BlockPublicPolicy": true,
          "IgnorePublicAcls": true,
          "RestrictPublicBuckets": true,
        },
        "Tags": [
          {
            "Key": "aws-cdk:auto-delete-objects",
            "Value": "true",
          },
        ],
      },
      "Type": "AWS::S3::Bucket",
      "UpdateReplacePolicy": "Delete",
    },
    "EcsLoadBalancerAccessLogLogBucketAutoDeleteObjectsCustomResource00160253": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "EcsLoadBalancerAccessLogLogBucketPolicyF46A4478",
      ],
      "Properties": {
        "BucketName": {
          "Ref": "EcsLoadBalancerAccessLogLogBucket0705AFF0",
        },
        "ServiceToken": {
          "Fn::GetAtt": [
            "CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F",
            "Arn",
          ],
        },
      },
      "Type": "Custom::S3AutoDeleteObjects",
      "UpdateReplacePolicy": "Delete",
    },
    "EcsLoadBalancerAccessLogLogBucketPolicyF46A4478": {
      "Properties": {
        "Bucket": {
          "Ref": "EcsLoadBalancerAccessLogLogBucket0705AFF0",
        },
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "s3:*",
              "Condition": {
                "Bool": {
                  "aws:SecureTransport": "false",
                },
              },
              "Effect": "Deny",
              "Principal": {
                "AWS": "*",
              },
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "EcsLoadBalancerAccessLogLogBucket0705AFF0",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "EcsLoadBalancerAccessLogLogBucket0705AFF0",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": [
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
              ],
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::GetAtt": [
                    "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
                    "Arn",
                  ],
                },
              },
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "EcsLoadBalancerAccessLogLogBucket0705AFF0",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "EcsLoadBalancerAccessLogLogBucket0705AFF0",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": [
                "s3:PutObject",
                "s3:PutObjectLegalHold",
                "s3:PutObjectRetention",
                "s3:PutObjectTagging",
                "s3:PutObjectVersionTagging",
                "s3:Abort*",
              ],
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::582318560864:root",
                    ],
                  ],
                },
              },
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    {
                      "Fn::GetAtt": [
                        "EcsLoadBalancerAccessLogLogBucket0705AFF0",
                        "Arn",
                      ],
                    },
                    "/AWSLogs/",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    "/*",
                  ],
                ],
              },
            },
            {
              "Action": "s3:PutObject",
              "Condition": {
                "StringEquals": {
                  "s3:x-amz-acl": "bucket-owner-full-control",
                },
              },
              "Effect": "Allow",
              "Principal": {
                "Service": "delivery.logs.amazonaws.com",
              },
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    {
                      "Fn::GetAtt": [
                        "EcsLoadBalancerAccessLogLogBucket0705AFF0",
                        "Arn",
                      ],
                    },
                    "/AWSLogs/",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    "/*",
                  ],
                ],
              },
            },
            {
              "Action": "s3:GetBucketAcl",
              "Effect": "Allow",
              "Principal": {
                "Service": "delivery.logs.amazonaws.com",
              },
              "Resource": {
                "Fn::GetAtt": [
                  "EcsLoadBalancerAccessLogLogBucket0705AFF0",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::S3::BucketPolicy",
    },
    "EcsLoadBalancerED63ACE7": {
      "DependsOn": [
        "EcsLoadBalancerAccessLogLogBucketAutoDeleteObjectsCustomResource00160253",
        "EcsLoadBalancerAccessLogLogBucketPolicyF46A4478",
        "EcsLoadBalancerAccessLogLogBucket0705AFF0",
      ],
      "Properties": {
        "LoadBalancerAttributes": [
          {
            "Key": "deletion_protection.enabled",
            "Value": "false",
          },
          {
            "Key": "access_logs.s3.enabled",
            "Value": "true",
          },
          {
            "Key": "access_logs.s3.bucket",
            "Value": {
              "Ref": "EcsLoadBalancerAccessLogLogBucket0705AFF0",
            },
          },
          {
            "Key": "access_logs.s3.prefix",
            "Value": "",
          },
        ],
        "Scheme": "internal",
        "Subnets": [
          {
            "Ref": "EcsNetworkVpcapplicationSubnet1SubnetED212D1D",
          },
          {
            "Ref": "EcsNetworkVpcapplicationSubnet2SubnetB57EA027",
          },
        ],
        "Type": "network",
      },
      "Type": "AWS::ElasticLoadBalancingV2::LoadBalancer",
    },
    "EcsNetworkFlowLog01409077": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "RetentionInDays": 731,
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
    },
    "EcsNetworkVpcCDBB0238": {
      "Properties": {
        "CidrBlock": "10.0.0.0/16",
        "EnableDnsHostnames": true,
        "EnableDnsSupport": true,
        "InstanceTenancy": "default",
        "Tags": [
          {
            "Key": "Name",
            "Value": "test/EcsNetwork/Vpc",
          },
        ],
      },
      "Type": "AWS::EC2::VPC",
    },
    "EcsNetworkVpcDynamoDBEndpoint00EEFCF1": {
      "Properties": {
        "RouteTableIds": [
          {
            "Ref": "EcsNetworkVpcapplicationSubnet1RouteTable0A33BC1B",
          },
          {
            "Ref": "EcsNetworkVpcapplicationSubnet2RouteTable92610BA9",
          },
          {
            "Ref": "EcsNetworkVpcingressSubnet1RouteTable20245959",
          },
          {
            "Ref": "EcsNetworkVpcingressSubnet2RouteTableF984A02B",
          },
          {
            "Ref": "EcsNetworkVpcdatabaseSubnet1RouteTable9D7AFF58",
          },
          {
            "Ref": "EcsNetworkVpcdatabaseSubnet2RouteTable26547453",
          },
        ],
        "ServiceName": {
          "Fn::Join": [
            "",
            [
              "com.amazonaws.",
              {
                "Ref": "AWS::Region",
              },
              ".dynamodb",
            ],
          ],
        },
        "VpcEndpointType": "Gateway",
        "VpcId": {
          "Ref": "EcsNetworkVpcCDBB0238",
        },
      },
      "Type": "AWS::EC2::VPCEndpoint",
    },
    "EcsNetworkVpcEcrDkrEndpointF8C85505": {
      "Properties": {
        "PrivateDnsEnabled": true,
        "SecurityGroupIds": [
          {
            "Fn::GetAtt": [
              "EcsNetworkVpcEcrDkrEndpointSecurityGroupB8C9C0EF",
              "GroupId",
            ],
          },
        ],
        "ServiceName": "com.amazonaws.ap-northeast-1.ecr.dkr",
        "SubnetIds": [
          {
            "Ref": "EcsNetworkVpcapplicationSubnet1SubnetED212D1D",
          },
          {
            "Ref": "EcsNetworkVpcapplicationSubnet2SubnetB57EA027",
          },
        ],
        "VpcEndpointType": "Interface",
        "VpcId": {
          "Ref": "EcsNetworkVpcCDBB0238",
        },
      },
      "Type": "AWS::EC2::VPCEndpoint",
    },
    "EcsNetworkVpcEcrDkrEndpointSecurityGroupB8C9C0EF": {
      "Properties": {
        "GroupDescription": "test/EcsNetwork/Vpc/EcrDkrEndpoint/SecurityGroup",
        "SecurityGroupEgress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "SecurityGroupIngress": [
          {
            "CidrIp": {
              "Fn::GetAtt": [
                "EcsNetworkVpcCDBB0238",
                "CidrBlock",
              ],
            },
            "Description": {
              "Fn::Join": [
                "",
                [
                  "from ",
                  {
                    "Fn::GetAtt": [
                      "EcsNetworkVpcCDBB0238",
                      "CidrBlock",
                    ],
                  },
                  ":443",
                ],
              ],
            },
            "FromPort": 443,
            "IpProtocol": "tcp",
            "ToPort": 443,
          },
        ],
        "Tags": [
          {
            "Key": "Name",
            "Value": "test/EcsNetwork/Vpc",
          },
        ],
        "VpcId": {
          "Ref": "EcsNetworkVpcCDBB0238",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "EcsNetworkVpcEcrEndpoint7DB1AB18": {
      "Properties": {
        "PrivateDnsEnabled": true,
        "SecurityGroupIds": [
          {
            "Fn::GetAtt": [
              "EcsNetworkVpcEcrEndpointSecurityGroup1408040F",
              "GroupId",
            ],
          },
        ],
        "ServiceName": "com.amazonaws.ap-northeast-1.ecr.api",
        "SubnetIds": [
          {
            "Ref": "EcsNetworkVpcapplicationSubnet1SubnetED212D1D",
          },
          {
            "Ref": "EcsNetworkVpcapplicationSubnet2SubnetB57EA027",
          },
        ],
        "VpcEndpointType": "Interface",
        "VpcId": {
          "Ref": "EcsNetworkVpcCDBB0238",
        },
      },
      "Type": "AWS::EC2::VPCEndpoint",
    },
    "EcsNetworkVpcEcrEndpointSecurityGroup1408040F": {
      "Properties": {
        "GroupDescription": "test/EcsNetwork/Vpc/EcrEndpoint/SecurityGroup",
        "SecurityGroupEgress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "SecurityGroupIngress": [
          {
            "CidrIp": {
              "Fn::GetAtt": [
                "EcsNetworkVpcCDBB0238",
                "CidrBlock",
              ],
            },
            "Description": {
              "Fn::Join": [
                "",
                [
                  "from ",
                  {
                    "Fn::GetAtt": [
                      "EcsNetworkVpcCDBB0238",
                      "CidrBlock",
                    ],
                  },
                  ":443",
                ],
              ],
            },
            "FromPort": 443,
            "IpProtocol": "tcp",
            "ToPort": 443,
          },
        ],
        "Tags": [
          {
            "Key": "Name",
            "Value": "test/EcsNetwork/Vpc",
          },
        ],
        "VpcId": {
          "Ref": "EcsNetworkVpcCDBB0238",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "EcsNetworkVpcFlowLogBA2D088B": {
      "Properties": {
        "DeliverLogsPermissionArn": {
          "Fn::GetAtt": [
            "EcsNetworkVpcFlowLogIAMRoleF94FACDC",
            "Arn",
          ],
        },
        "LogDestinationType": "cloud-watch-logs",
        "LogGroupName": {
          "Ref": "EcsNetworkFlowLog01409077",
        },
        "ResourceId": {
          "Ref": "EcsNetworkVpcCDBB0238",
        },
        "ResourceType": "VPC",
        "Tags": [
          {
            "Key": "Name",
            "Value": "test/EcsNetwork/Vpc",
          },
        ],
        "TrafficType": "ALL",
      },
      "Type": "AWS::EC2::FlowLog",
    },
    "EcsNetworkVpcFlowLogIAMRoleDefaultPolicy0F9BA2EB": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "logs:CreateLogStream",
                "logs:PutLogEvents",
                "logs:DescribeLogStreams",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "EcsNetworkFlowLog01409077",
                  "Arn",
                ],
              },
            },
            {
              "Action": "iam:PassRole",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "EcsNetworkVpcFlowLogIAMRoleF94FACDC",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "EcsNetworkVpcFlowLogIAMRoleDefaultPolicy0F9BA2EB",
        "Roles": [
          {
            "Ref": "EcsNetworkVpcFlowLogIAMRoleF94FACDC",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "EcsNetworkVpcFlowLogIAMRoleF94FACDC": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "vpc-flow-logs.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "test/EcsNetwork/Vpc",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "EcsNetworkVpcIGW9D9FF8A6": {
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "test/EcsNetwork/Vpc",
          },
        ],
      },
      "Type": "AWS::EC2::InternetGateway",
    },
    "EcsNetworkVpcLogEndpoint08FC3605": {
      "Properties": {
        "PrivateDnsEnabled": true,
        "SecurityGroupIds": [
          {
            "Fn::GetAtt": [
              "EcsNetworkVpcLogEndpointSecurityGroup1950D703",
              "GroupId",
            ],
          },
        ],
        "ServiceName": "com.amazonaws.ap-northeast-1.logs",
        "SubnetIds": [
          {
            "Ref": "EcsNetworkVpcapplicationSubnet1SubnetED212D1D",
          },
          {
            "Ref": "EcsNetworkVpcapplicationSubnet2SubnetB57EA027",
          },
        ],
        "VpcEndpointType": "Interface",
        "VpcId": {
          "Ref": "EcsNetworkVpcCDBB0238",
        },
      },
      "Type": "AWS::EC2::VPCEndpoint",
    },
    "EcsNetworkVpcLogEndpointSecurityGroup1950D703": {
      "Properties": {
        "GroupDescription": "test/EcsNetwork/Vpc/LogEndpoint/SecurityGroup",
        "SecurityGroupEgress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "SecurityGroupIngress": [
          {
            "CidrIp": {
              "Fn::GetAtt": [
                "EcsNetworkVpcCDBB0238",
                "CidrBlock",
              ],
            },
            "Description": {
              "Fn::Join": [
                "",
                [
                  "from ",
                  {
                    "Fn::GetAtt": [
                      "EcsNetworkVpcCDBB0238",
                      "CidrBlock",
                    ],
                  },
                  ":443",
                ],
              ],
            },
            "FromPort": 443,
            "IpProtocol": "tcp",
            "ToPort": 443,
          },
        ],
        "Tags": [
          {
            "Key": "Name",
            "Value": "test/EcsNetwork/Vpc",
          },
        ],
        "VpcId": {
          "Ref": "EcsNetworkVpcCDBB0238",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "EcsNetworkVpcS3Endpoint516D3570": {
      "Properties": {
        "RouteTableIds": [
          {
            "Ref": "EcsNetworkVpcapplicationSubnet1RouteTable0A33BC1B",
          },
          {
            "Ref": "EcsNetworkVpcapplicationSubnet2RouteTable92610BA9",
          },
          {
            "Ref": "EcsNetworkVpcingressSubnet1RouteTable20245959",
          },
          {
            "Ref": "EcsNetworkVpcingressSubnet2RouteTableF984A02B",
          },
          {
            "Ref": "EcsNetworkVpcdatabaseSubnet1RouteTable9D7AFF58",
          },
          {
            "Ref": "EcsNetworkVpcdatabaseSubnet2RouteTable26547453",
          },
        ],
        "ServiceName": {
          "Fn::Join": [
            "",
            [
              "com.amazonaws.",
              {
                "Ref": "AWS::Region",
              },
              ".s3",
            ],
          ],
        },
        "VpcEndpointType": "Gateway",
        "VpcId": {
          "Ref": "EcsNetworkVpcCDBB0238",
        },
      },
      "Type": "AWS::EC2::VPCEndpoint",
    },
    "EcsNetworkVpcSSMInterface0C43CB8D": {
      "Properties": {
        "PrivateDnsEnabled": true,
        "SecurityGroupIds": [
          {
            "Fn::GetAtt": [
              "EcsNetworkVpcSSMInterfaceSecurityGroup6CAE469E",
              "GroupId",
            ],
          },
        ],
        "ServiceName": "com.amazonaws.ap-northeast-1.ssm",
        "SubnetIds": [
          {
            "Ref": "EcsNetworkVpcapplicationSubnet1SubnetED212D1D",
          },
          {
            "Ref": "EcsNetworkVpcapplicationSubnet2SubnetB57EA027",
          },
        ],
        "VpcEndpointType": "Interface",
        "VpcId": {
          "Ref": "EcsNetworkVpcCDBB0238",
        },
      },
      "Type": "AWS::EC2::VPCEndpoint",
    },
    "EcsNetworkVpcSSMInterfaceSecurityGroup6CAE469E": {
      "Properties": {
        "GroupDescription": "test/EcsNetwork/Vpc/SSMInterface/SecurityGroup",
        "SecurityGroupEgress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "SecurityGroupIngress": [
          {
            "CidrIp": {
              "Fn::GetAtt": [
                "EcsNetworkVpcCDBB0238",
                "CidrBlock",
              ],
            },
            "Description": {
              "Fn::Join": [
                "",
                [
                  "from ",
                  {
                    "Fn::GetAtt": [
                      "EcsNetworkVpcCDBB0238",
                      "CidrBlock",
                    ],
                  },
                  ":443",
                ],
              ],
            },
            "FromPort": 443,
            "IpProtocol": "tcp",
            "ToPort": 443,
          },
        ],
        "Tags": [
          {
            "Key": "Name",
            "Value": "test/EcsNetwork/Vpc",
          },
        ],
        "VpcId": {
          "Ref": "EcsNetworkVpcCDBB0238",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "EcsNetworkVpcSecretsEndpoint818B94C7": {
      "Properties": {
        "PrivateDnsEnabled": true,
        "SecurityGroupIds": [
          {
            "Fn::GetAtt": [
              "EcsNetworkVpcSecretsEndpointSecurityGroupE84890C3",
              "GroupId",
            ],
          },
        ],
        "ServiceName": "com.amazonaws.ap-northeast-1.secretsmanager",
        "SubnetIds": [
          {
            "Ref": "EcsNetworkVpcapplicationSubnet1SubnetED212D1D",
          },
          {
            "Ref": "EcsNetworkVpcapplicationSubnet2SubnetB57EA027",
          },
        ],
        "VpcEndpointType": "Interface",
        "VpcId": {
          "Ref": "EcsNetworkVpcCDBB0238",
        },
      },
      "Type": "AWS::EC2::VPCEndpoint",
    },
    "EcsNetworkVpcSecretsEndpointSecurityGroupE84890C3": {
      "Properties": {
        "GroupDescription": "test/EcsNetwork/Vpc/SecretsEndpoint/SecurityGroup",
        "SecurityGroupEgress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "SecurityGroupIngress": [
          {
            "CidrIp": {
              "Fn::GetAtt": [
                "EcsNetworkVpcCDBB0238",
                "CidrBlock",
              ],
            },
            "Description": {
              "Fn::Join": [
                "",
                [
                  "from ",
                  {
                    "Fn::GetAtt": [
                      "EcsNetworkVpcCDBB0238",
                      "CidrBlock",
                    ],
                  },
                  ":443",
                ],
              ],
            },
            "FromPort": 443,
            "IpProtocol": "tcp",
            "ToPort": 443,
          },
        ],
        "Tags": [
          {
            "Key": "Name",
            "Value": "test/EcsNetwork/Vpc",
          },
        ],
        "VpcId": {
          "Ref": "EcsNetworkVpcCDBB0238",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "EcsNetworkVpcVPCGWAF794370": {
      "Properties": {
        "InternetGatewayId": {
          "Ref": "EcsNetworkVpcIGW9D9FF8A6",
        },
        "VpcId": {
          "Ref": "EcsNetworkVpcCDBB0238",
        },
      },
      "Type": "AWS::EC2::VPCGatewayAttachment",
    },
    "EcsNetworkVpcapplicationSubnet1DefaultRoute51EF71FC": {
      "Properties": {
        "DestinationCidrBlock": "0.0.0.0/0",
        "NatGatewayId": {
          "Ref": "EcsNetworkVpcingressSubnet1NATGatewayD9E4CCA8",
        },
        "RouteTableId": {
          "Ref": "EcsNetworkVpcapplicationSubnet1RouteTable0A33BC1B",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "EcsNetworkVpcapplicationSubnet1RouteTable0A33BC1B": {
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "test/EcsNetwork/Vpc/applicationSubnet1",
          },
        ],
        "VpcId": {
          "Ref": "EcsNetworkVpcCDBB0238",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "EcsNetworkVpcapplicationSubnet1RouteTableAssociationB1CA77EE": {
      "Properties": {
        "RouteTableId": {
          "Ref": "EcsNetworkVpcapplicationSubnet1RouteTable0A33BC1B",
        },
        "SubnetId": {
          "Ref": "EcsNetworkVpcapplicationSubnet1SubnetED212D1D",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "EcsNetworkVpcapplicationSubnet1SubnetED212D1D": {
      "Properties": {
        "AvailabilityZone": {
          "Fn::Select": [
            0,
            {
              "Fn::GetAZs": "",
            },
          ],
        },
        "CidrBlock": "10.0.2.0/24",
        "MapPublicIpOnLaunch": false,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "application",
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Private",
          },
          {
            "Key": "Name",
            "Value": "test/EcsNetwork/Vpc/applicationSubnet1",
          },
        ],
        "VpcId": {
          "Ref": "EcsNetworkVpcCDBB0238",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "EcsNetworkVpcapplicationSubnet2DefaultRouteDAC10721": {
      "Properties": {
        "DestinationCidrBlock": "0.0.0.0/0",
        "NatGatewayId": {
          "Ref": "EcsNetworkVpcingressSubnet2NATGatewayDC58D5F5",
        },
        "RouteTableId": {
          "Ref": "EcsNetworkVpcapplicationSubnet2RouteTable92610BA9",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "EcsNetworkVpcapplicationSubnet2RouteTable92610BA9": {
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "test/EcsNetwork/Vpc/applicationSubnet2",
          },
        ],
        "VpcId": {
          "Ref": "EcsNetworkVpcCDBB0238",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "EcsNetworkVpcapplicationSubnet2RouteTableAssociation2F8ECB7A": {
      "Properties": {
        "RouteTableId": {
          "Ref": "EcsNetworkVpcapplicationSubnet2RouteTable92610BA9",
        },
        "SubnetId": {
          "Ref": "EcsNetworkVpcapplicationSubnet2SubnetB57EA027",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "EcsNetworkVpcapplicationSubnet2SubnetB57EA027": {
      "Properties": {
        "AvailabilityZone": {
          "Fn::Select": [
            1,
            {
              "Fn::GetAZs": "",
            },
          ],
        },
        "CidrBlock": "10.0.3.0/24",
        "MapPublicIpOnLaunch": false,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "application",
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Private",
          },
          {
            "Key": "Name",
            "Value": "test/EcsNetwork/Vpc/applicationSubnet2",
          },
        ],
        "VpcId": {
          "Ref": "EcsNetworkVpcCDBB0238",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "EcsNetworkVpcdatabaseSubnet1RouteTable9D7AFF58": {
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "test/EcsNetwork/Vpc/databaseSubnet1",
          },
        ],
        "VpcId": {
          "Ref": "EcsNetworkVpcCDBB0238",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "EcsNetworkVpcdatabaseSubnet1RouteTableAssociation7D375E70": {
      "Properties": {
        "RouteTableId": {
          "Ref": "EcsNetworkVpcdatabaseSubnet1RouteTable9D7AFF58",
        },
        "SubnetId": {
          "Ref": "EcsNetworkVpcdatabaseSubnet1Subnet2CE02314",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "EcsNetworkVpcdatabaseSubnet1Subnet2CE02314": {
      "Properties": {
        "AvailabilityZone": {
          "Fn::Select": [
            0,
            {
              "Fn::GetAZs": "",
            },
          ],
        },
        "CidrBlock": "10.0.4.0/24",
        "MapPublicIpOnLaunch": false,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "database",
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Isolated",
          },
          {
            "Key": "Name",
            "Value": "test/EcsNetwork/Vpc/databaseSubnet1",
          },
        ],
        "VpcId": {
          "Ref": "EcsNetworkVpcCDBB0238",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "EcsNetworkVpcdatabaseSubnet2RouteTable26547453": {
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "test/EcsNetwork/Vpc/databaseSubnet2",
          },
        ],
        "VpcId": {
          "Ref": "EcsNetworkVpcCDBB0238",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "EcsNetworkVpcdatabaseSubnet2RouteTableAssociation8CDB8B6F": {
      "Properties": {
        "RouteTableId": {
          "Ref": "EcsNetworkVpcdatabaseSubnet2RouteTable26547453",
        },
        "SubnetId": {
          "Ref": "EcsNetworkVpcdatabaseSubnet2SubnetDABBF4E6",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "EcsNetworkVpcdatabaseSubnet2SubnetDABBF4E6": {
      "Properties": {
        "AvailabilityZone": {
          "Fn::Select": [
            1,
            {
              "Fn::GetAZs": "",
            },
          ],
        },
        "CidrBlock": "10.0.5.0/24",
        "MapPublicIpOnLaunch": false,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "database",
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Isolated",
          },
          {
            "Key": "Name",
            "Value": "test/EcsNetwork/Vpc/databaseSubnet2",
          },
        ],
        "VpcId": {
          "Ref": "EcsNetworkVpcCDBB0238",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "EcsNetworkVpcingressSubnet1DefaultRoute62ED081D": {
      "DependsOn": [
        "EcsNetworkVpcVPCGWAF794370",
      ],
      "Properties": {
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": {
          "Ref": "EcsNetworkVpcIGW9D9FF8A6",
        },
        "RouteTableId": {
          "Ref": "EcsNetworkVpcingressSubnet1RouteTable20245959",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "EcsNetworkVpcingressSubnet1EIP76812DA3": {
      "Properties": {
        "Domain": "vpc",
        "Tags": [
          {
            "Key": "Name",
            "Value": "test/EcsNetwork/Vpc/ingressSubnet1",
          },
        ],
      },
      "Type": "AWS::EC2::EIP",
    },
    "EcsNetworkVpcingressSubnet1NATGatewayD9E4CCA8": {
      "DependsOn": [
        "EcsNetworkVpcingressSubnet1DefaultRoute62ED081D",
        "EcsNetworkVpcingressSubnet1RouteTableAssociationCA737C90",
      ],
      "Properties": {
        "AllocationId": {
          "Fn::GetAtt": [
            "EcsNetworkVpcingressSubnet1EIP76812DA3",
            "AllocationId",
          ],
        },
        "SubnetId": {
          "Ref": "EcsNetworkVpcingressSubnet1SubnetA8ACF814",
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "test/EcsNetwork/Vpc/ingressSubnet1",
          },
        ],
      },
      "Type": "AWS::EC2::NatGateway",
    },
    "EcsNetworkVpcingressSubnet1RouteTable20245959": {
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "test/EcsNetwork/Vpc/ingressSubnet1",
          },
        ],
        "VpcId": {
          "Ref": "EcsNetworkVpcCDBB0238",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "EcsNetworkVpcingressSubnet1RouteTableAssociationCA737C90": {
      "Properties": {
        "RouteTableId": {
          "Ref": "EcsNetworkVpcingressSubnet1RouteTable20245959",
        },
        "SubnetId": {
          "Ref": "EcsNetworkVpcingressSubnet1SubnetA8ACF814",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "EcsNetworkVpcingressSubnet1SubnetA8ACF814": {
      "Properties": {
        "AvailabilityZone": {
          "Fn::Select": [
            0,
            {
              "Fn::GetAZs": "",
            },
          ],
        },
        "CidrBlock": "10.0.0.0/24",
        "MapPublicIpOnLaunch": true,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "ingress",
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public",
          },
          {
            "Key": "Name",
            "Value": "test/EcsNetwork/Vpc/ingressSubnet1",
          },
        ],
        "VpcId": {
          "Ref": "EcsNetworkVpcCDBB0238",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "EcsNetworkVpcingressSubnet2DefaultRouteCF3E4AFC": {
      "DependsOn": [
        "EcsNetworkVpcVPCGWAF794370",
      ],
      "Properties": {
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": {
          "Ref": "EcsNetworkVpcIGW9D9FF8A6",
        },
        "RouteTableId": {
          "Ref": "EcsNetworkVpcingressSubnet2RouteTableF984A02B",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "EcsNetworkVpcingressSubnet2EIP05765469": {
      "Properties": {
        "Domain": "vpc",
        "Tags": [
          {
            "Key": "Name",
            "Value": "test/EcsNetwork/Vpc/ingressSubnet2",
          },
        ],
      },
      "Type": "AWS::EC2::EIP",
    },
    "EcsNetworkVpcingressSubnet2NATGatewayDC58D5F5": {
      "DependsOn": [
        "EcsNetworkVpcingressSubnet2DefaultRouteCF3E4AFC",
        "EcsNetworkVpcingressSubnet2RouteTableAssociationB0981CEC",
      ],
      "Properties": {
        "AllocationId": {
          "Fn::GetAtt": [
            "EcsNetworkVpcingressSubnet2EIP05765469",
            "AllocationId",
          ],
        },
        "SubnetId": {
          "Ref": "EcsNetworkVpcingressSubnet2Subnet259A3970",
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "test/EcsNetwork/Vpc/ingressSubnet2",
          },
        ],
      },
      "Type": "AWS::EC2::NatGateway",
    },
    "EcsNetworkVpcingressSubnet2RouteTableAssociationB0981CEC": {
      "Properties": {
        "RouteTableId": {
          "Ref": "EcsNetworkVpcingressSubnet2RouteTableF984A02B",
        },
        "SubnetId": {
          "Ref": "EcsNetworkVpcingressSubnet2Subnet259A3970",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "EcsNetworkVpcingressSubnet2RouteTableF984A02B": {
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "test/EcsNetwork/Vpc/ingressSubnet2",
          },
        ],
        "VpcId": {
          "Ref": "EcsNetworkVpcCDBB0238",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "EcsNetworkVpcingressSubnet2Subnet259A3970": {
      "Properties": {
        "AvailabilityZone": {
          "Fn::Select": [
            1,
            {
              "Fn::GetAZs": "",
            },
          ],
        },
        "CidrBlock": "10.0.1.0/24",
        "MapPublicIpOnLaunch": true,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "ingress",
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public",
          },
          {
            "Key": "Name",
            "Value": "test/EcsNetwork/Vpc/ingressSubnet2",
          },
        ],
        "VpcId": {
          "Ref": "EcsNetworkVpcCDBB0238",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
  },
  "Rules": {
    "CheckBootstrapVersion": {
      "Assertions": [
        {
          "Assert": {
            "Fn::Not": [
              {
                "Fn::Contains": [
                  [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                  ],
                  {
                    "Ref": "BootstrapVersion",
                  },
                ],
              },
            ],
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.",
        },
      ],
    },
  },
}
`;
